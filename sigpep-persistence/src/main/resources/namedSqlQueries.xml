<?xml version="1.0" encoding="ISO-8859-1" ?>
<sigpep-query>
    <query>

        <!--returns the number of protease entries in the database-->
        <proteaseCount>SELECT COUNT(protease_id) AS count FROM protease</proteaseCount>

        <!--returns the number of protein entries in the database-->
        <proteinCount>SELECT COUNT(protein_id) AS count FROM protein</proteinCount>

        <!--returns the number of gene entries in the database-->
        <geneCount>SELECT COUNT(gene_id) AS count FROM gene</geneCount>

        <!--returns the number of sequence entries in the database-->
        <sequenceCount>SELECT count(sequence_id) AS count FROM protein_sequence</sequenceCount>

        <!--returns protein-to-gene-entry mapping-->
        <proteinAccessionToGeneAccession>
            SELECT p.protein_accession\, g.gene_accession
            FROM gene g\,
            gene2protein g2p\,
            protein p
            WHERE g.gene_id=g2p.gene_id
            AND g2p.protein_id=p.protein_id
            ORDER BY gene_accession
        </proteinAccessionToGeneAccession>

        <!--returns protein-sequence-to-protein entry mapping-->
        <sequenceIdToProteinAccession>
            SELECT p2s.sequence_id\,
            p.protein_accession
            FROM protein p\,
            protein2sequence p2s
            WHERE p.protein_id=p2s.protein_id
        </sequenceIdToProteinAccession>

        <!--returns protein sequence ids and sequences-->
        <sequenceIdsAndStrings>
            SELECT sequence_id\, aa_sequence FROM protein_sequence
        </sequenceIdsAndStrings>

        <!--returns the peptide feature locations for a set of proteases-->
        <peptideFeaturesByProteaseShortName>
            SELECT pf.sequence_id\, pf.pos_start\, pf.pos_end
            FROM protease p\, protease2peptide_feature p2pf\, peptide_feature pf
            WHERE p.name IN (:proteaseNames)
            AND p.protease_id=p2pf.protease_id
            AND p2pf.peptide_feature_id=pf.peptide_feature_id
        </peptideFeaturesByProteaseShortName>

        <!--returns set of peptide sequences generated by protase combination-->
        <peptideSequencesByProteaseShortName>
            SELECT DISTINCT SUBSTR(seq.aa_sequence\, pep_feat.pos_start\, pep_feat.pos_end - pep_feat.pos_start + 1) AS
            aa_sequence
            FROM protein_sequence seq\,
            peptide_feature pep_feat\,
            protease2peptide_feature prot2pep_feat\,
            protease prot
            WHERE seq.sequence_id=pep_feat.sequence_id
            AND pep_feat.peptide_feature_id=prot2pep_feat.peptide_feature_id
            AND prot2pep_feat.protease_id=prot.protease_id
            AND prot.name IN (:proteaseShortNames)
        </peptideSequencesByProteaseShortName>

        <!--returns set of signature peptide sequences generated by protase combination-->
        <signaturePeptideSequencesByProteaseShortName>
            SELECT DISTINCT SUBSTR(seq.aa_sequence\, pep_feat.pos_start\, pep_feat.pos_end - pep_feat.pos_start + 1) AS
            aa_sequence
            FROM protein_sequence seq\,
            peptide_feature pep_feat\,
            protease2peptide_feature prot2pep_feat\,
            protease prot\,
            (SELECT peptide_feature.peptide_id\,
            COUNT(DISTINCT peptide_feature.sequence_id\, peptide_feature.pos_start\, peptide_feature.pos_end)
            location_count
            FROM protease\,
            protease2peptide_feature\,
            peptide_feature
            WHERE protease.name IN (:proteaseNames)
            AND protease.protease_id=protease2peptide_feature.protease_id
            AND protease2peptide_feature.peptide_feature_id=peptide_feature.peptide_feature_id
            GROUP BY peptide_id) proteome_location_count
            WHERE seq.sequence_id=pep_feat.sequence_id
            AND pep_feat.peptide_feature_id=prot2pep_feat.peptide_feature_id
            AND prot2pep_feat.protease_id=prot.protease_id
            AND prot.name IN (:proteaseNames)
            AND pep_feat.peptide_id=proteome_location_count.peptide_id
            AND proteome_location_count.location_count = 1
        </signaturePeptideSequencesByProteaseShortName>

        <!--returns set of peptides sequences and sequence IDs of sequences they are a substring of for a protease combination-->
        <peptideSequenceAndSequenceIdByPeptideSequenceAndProteaseShortName>
            SELECT DISTINCT SUBSTR(seq.aa_sequence\, pep_feat.pos_start\, pep_feat.pos_end - pep_feat.pos_start + 1) AS
            peptide_sequence\, pep_feat.sequence_id
            FROM protein_sequence seq\,
            peptide_feature pep_feat\,
            protease2peptide_feature prot2pep_feat\,
            protease prot
            WHERE seq.sequence_id=pep_feat.sequence_id
            AND pep_feat.peptide_feature_id=prot2pep_feat.peptide_feature_id
            AND prot2pep_feat.protease_id=prot.protease_id
            AND prot.name IN (:proteaseNames)
            HAVING peptide_sequence IN (:peptideSequences)
        </peptideSequenceAndSequenceIdByPeptideSequenceAndProteaseShortName>

        <createTemporaryTableGenesAlternativelySpliced>
            CREATE TEMPORARY TABLE gene_altsplice(gene_id INT UNSIGNED PRIMARY KEY)
        </createTemporaryTableGenesAlternativelySpliced>

        <insertIntoTemporaryTableGenesAlternativelySpliced>
            INSERT INTO gene_altsplice(gene_id)
            SELECT g2pro.gene_id
            FROM gene2protein g2pro
            GROUP BY g2pro.gene_id
            HAVING count(g2pro.protein_id) > 1
        </insertIntoTemporaryTableGenesAlternativelySpliced>

        <proteinIdsAlternativelySplicedGenesTranscriptLevel>
            SELECT p.protein_accession
            FROM gene2protein g2p\,
            protein p
            WHERE g2p.protein_id=p.protein_id
            AND g2p.gene_id IN (
            SELECT gene_id
            FROM gene_altsplice
            )
        </proteinIdsAlternativelySplicedGenesTranscriptLevel>

        <signaturePeptideIdsByProteaseShortNameProteinLevel>
            SELECT   pf.peptide_id
            FROM     peptide_feature pf\,
                     protease2peptide_feature p2pf\,
                     protease prot
            WHERE    pf.peptide_feature_id=p2pf.peptide_feature_id
            AND      p2pf.protease_id = prot.protease_id
            AND      prot.name in (:proteaseNames)
            GROUP BY peptide_id
            HAVING   COUNT(pf.sequence_id) = 1
        </signaturePeptideIdsByProteaseShortNameProteinLevel>

        <signaturePeptideIdsByProteaseShortNameGeneLevel>
            SELECT   pf.peptide_id
            FROM     gene2protein g2p\,
                     protein2sequence p2s\,
                     peptide_feature pf\,
                     protease2peptide_feature p2pf\,
                     protease prot
            WHERE    g2p.protein_id=p2s.protein_id
            AND      p2s.sequence_id=pf.sequence_id
            AND      pf.peptide_feature_id=p2pf.peptide_feature_id
            AND      p2pf.protease_id = prot.protease_id
            AND      prot.name in (:proteaseNames)
            GROUP BY peptide_id
            HAVING   COUNT(DISTINCT gene_id) = 1
        </signaturePeptideIdsByProteaseShortNameGeneLevel>

        <peptideFeatureIdsByPeptideIdAndSequenceId>
            SELECT peptide_feature_id
            FROM peptide_feature pf
            protease2peptide_feature p2pf\,
            protease prot
            WHERE peptide_id IN (:peptideIds)
            AND sequence_id IN (:sequenceIds)
            AND pf.peptide_feature_id=p2pf.peptide_feature_id
            AND p2pf.protease_id = prot.protease_id
            AND prot.name IN (:proteaseNames)
        </peptideFeatureIdsByPeptideIdAndSequenceId>

        <accessionsAlternativelySplicedGenesTranscriptLevel>
            SELECT   g.gene_accession
            FROM     gene g\,
                     gene2protein g2p
            WHERE    g.gene_id=g2p.gene_id
            GROUP BY g.gene_accession
            HAVING   COUNT(g2p.protein_id) > 1
        </accessionsAlternativelySplicedGenesTranscriptLevel>

        <accessionsAlternativelySplicedGenesTranslationLevel>
            SELECT   g.gene_accession
            FROM     gene g\,
                     gene2protein g2p\,
                     protein2sequence p2s
            WHERE    g.gene_id=g2p.gene_id
            AND      g2p.protein_id=p2s.protein_id
            GROUP BY g.gene_accession
            HAVING   COUNT(DISTINCT p2s.sequence_id) > 1
        </accessionsAlternativelySplicedGenesTranslationLevel>

        <!-- selects the peptide length frequency for a protease combination -->
        <peptideLengthFrequencyByProteaseShortNames>
            SELECT   pf.pos_end - pf.pos_start AS length\,
                     COUNT(DISTINCT pf.peptide_id)
            FROM     peptide_feature pf\,
                     protease2peptide_feature pf2prot\,
                     protease prot
            WHERE    pf.peptide_feature_id=pf2prot.peptide_feature_id
            AND      pf2prot.protease_id=prot.protease_id
            AND      prot.name IN (:proteaseShortNames)
            GROUP BY length
        </peptideLengthFrequencyByProteaseShortNames>

        <geneAccessions>
                    SELECT gene_accession FROM gene
        </geneAccessions>

        <proteinAccessions>
            SELECT protein_accession FROM protein
        </proteinAccessions>

        <proteinSequences>
            SELECT aa_sequence FROM protein_sequence
        </proteinSequences>

        <!-- ====================================================== -->


        <sequenceCoverageBySignatureProtease>
            SELECT prot.name AS signature_protease\,
            COUNT(DISTINCT pep.peptide_id) AS sigpep_freq_abs\,
            COUNT(DISTINCT pep.peptide_id)/sigpep_count.total AS sigpep_freq_rel\,
            COUNT(DISTINCT pep.sequence_id) AS seq_freq_abs\,
            COUNT(DISTINCT pep.sequence_id)/seq_count.total AS seq_freq_rel\,
            COUNT(DISTINCT pro2seq.protein_id) AS pro_freq_abs\,
            COUNT(DISTINCT pro2seq.protein_id)/pro_count.total AS pro_freq_rel\,
            COUNT(DISTINCT pro2gene.gene_id) AS gene_freq_abs\,
            COUNT(DISTINCT pro2gene.gene_id)/gene_count.total AS gene_freq_rel
            FROM peptide pep\,
            protein2sequence pro2seq\,
            protein2gene pro2gene\,
            signature_peptide sigpep\,
            peptide2protease pep2prot\,
            protease prot\,
            (SELECT COUNT(sequence_id) AS total FROM protein_sequence) seq_count\,
            (SELECT COUNT(peptide_id) AS total FROM signature_peptide) sigpep_count\,
            (SELECT COUNT(protein_id) AS total FROM protein) pro_count\,
            (SELECT COUNT(gene_id) AS total FROM gene) gene_count
            WHERE sigpep.peptide_id=pep.peptide_id
            AND sigpep.peptide_id=pep2prot.peptide_id
            AND pep2prot.protease_id=prot.protease_id
            AND pep.sequence_id=pro2seq.sequence_id
            AND pro2seq.protein_id=pro2gene.protein_id
            GROUP BY prot.name
            UNION
            SELECT "all" AS signature_protease\,
            COUNT(DISTINCT pep.peptide_id) AS sigpep_freq_abs\,
            COUNT(DISTINCT pep.peptide_id)/sigpep_count.total AS sigpep_freq_rel\,
            COUNT(DISTINCT pep.sequence_id) AS seq_freq_abs\,
            COUNT(DISTINCT pep.sequence_id)/seq_count.total AS seq_freq_rel\,
            COUNT(DISTINCT pro2seq.protein_id) AS pro_freq_abs\,
            COUNT(DISTINCT pro2seq.protein_id)/pro_count.total AS pro_freq_rel\,
            COUNT(DISTINCT pro2gene.gene_id) AS gene_freq_abs\,
            COUNT(DISTINCT pro2gene.gene_id)/gene_count.total AS gene_freq_rel
            FROM peptide pep\,
            protein2sequence pro2seq\,
            protein2gene pro2gene\,
            signature_peptide sigpep\,
            (SELECT COUNT(sequence_id) AS total FROM protein_sequence) seq_count\,
            (SELECT COUNT(peptide_id) AS total FROM signature_peptide) sigpep_count\,
            (SELECT COUNT(protein_id) AS total FROM protein) pro_count\,
            (SELECT COUNT(gene_id) AS total FROM gene) gene_count
            WHERE sigpep.peptide_id=pep.peptide_id
            AND pep.sequence_id=pro2seq.sequence_id
            AND pro2seq.protein_id=pro2gene.protein_id
        </sequenceCoverageBySignatureProtease>

        <sequenceCoverageByPeptideSet>
            SELECT ":protease" AS signature_protease\,
            COUNT(DISTINCT pep.peptide_id) AS sigpep_freq_abs\,
            COUNT(DISTINCT pep.peptide_id)/sigpep_count.total AS sigpep_freq_rel\,
            COUNT(DISTINCT pep.sequence_id) AS seq_freq_abs\,
            COUNT(DISTINCT pep.sequence_id)/seq_count.total AS seq_freq_rel\,
            COUNT(DISTINCT pro2seq.protein_id) AS pro_freq_abs\,
            COUNT(DISTINCT pro2seq.protein_id)/pro_count.total AS pro_freq_rel\,
            COUNT(DISTINCT pro2gene.gene_id) AS gene_freq_abs\,
            COUNT(DISTINCT pro2gene.gene_id)/gene_count.total AS gene_freq_rel
            FROM peptide pep\,
            protein2sequence pro2seq\,
            protein2gene pro2gene\,
            (SELECT COUNT(sequence_id) AS total FROM protein_sequence) seq_count\,
            (SELECT COUNT(peptide_id) AS total FROM signature_peptide) sigpep_count\,
            (SELECT COUNT(protein_id) AS total FROM protein) pro_count\,
            (SELECT COUNT(gene_id) AS total FROM gene) gene_count
            WHERE pep.peptide_id in (:peptideIds)
            AND pep.sequence_id=pro2seq.sequence_id
            AND pro2seq.protein_id=pro2gene.protein_id

        </sequenceCoverageByPeptideSet>
        <peptideSequence>
            SELECT pep.peptide_id\,
            SUBSTR(seq.aa_sequence\, pep.pos_start\, pep.pos_end - pep.pos_start + 1) AS aa_sequence
            FROM peptide pep\,
            protein_sequence seq
            WHERE pep.sequence_id=seq.sequence_id
        </peptideSequence>
        <proteomeCoverageForProteaseCombination>
            SELECT count(distinct p2s.protein_id) as proteome_coverage
            FROM
            (SELECT pf.peptide_id\, count(distinct pf.sequence_id) as sequence_count
            FROM peptide_feature pf\, protease2peptide_feature pf2prot\, protease prot
            WHERE pf.peptide_feature_id=pf2prot.peptide_feature_id
            AND pf2prot.protease_id=prot.protease_id
            AND prot.name in (:proteaseCombination)
            GROUP BY pf.peptide_id) peptide_degeneracy\,
            peptide_feature pf\,
            protein2sequence p2s
            WHERE peptide_degeneracy.sequence_count = 1
            AND peptide_degeneracy.peptide_id=pf.peptide_id
            AND pf.sequence_id=p2s.sequence_id
        </proteomeCoverageForProteaseCombination>
        <genomeCoverageForProteaseCombination>
            SELECT count(distinct g2pro.gene_id) as genome_coverage
            FROM
            (SELECT pf.peptide_id\, count(distinct g2pro.gene_id) as gene_count
            FROM peptide_feature pf\, protease2peptide_feature pf2prot\, protease prot\, protein2sequence pro2seq\,
            gene2protein g2pro
            WHERE pf.peptide_feature_id=pf2prot.peptide_feature_id
            AND pf2prot.protease_id=prot.protease_id
            AND prot.name IN (:proteaseCombination)
            AND pro2seq.sequence_id=pf.sequence_id
            AND pro2seq.protein_id=g2pro.protein_id
            GROUP BY pf.peptide_id) peptide_degeneracy\,
            peptide_feature pf\,
            protein2sequence p2s\,
            gene2protein g2pro
            WHERE peptide_degeneracy.gene_count = 1
            AND peptide_degeneracy.peptide_id=pf.peptide_id
            AND pf.sequence_id=p2s.sequence_id
            AND p2s.protein_id=g2pro.protein_id
        </genomeCoverageForProteaseCombination>
        <sequenceCoverageForProteaseCombination>
            SELECT count(distinct pf.sequence_id) as proteome_coverage
            FROM
            (SELECT pf.peptide_id\, count(distinct pf.sequence_id) as sequence_count
            FROM peptide_feature pf\, protease2peptide_feature pf2prot\, protease prot
            WHERE pf.peptide_feature_id=pf2prot.peptide_feature_id
            AND pf2prot.protease_id=prot.protease_id
            AND prot.name in (:proteaseCombination)
            GROUP BY pf.peptide_id) peptide_degeneracy\,
            peptide_feature pf
            WHERE peptide_degeneracy.sequence_count = 1
            AND peptide_degeneracy.peptide_id=pf.peptide_id
        </sequenceCoverageForProteaseCombination>

        <lastProteinId>SELECT MAX(protein_id) AS id FROM protein</lastProteinId>
        <lastGeneId>SELECT MAX(gene_id) AS id FROM gene</lastGeneId>

        <proteaseIds>
            SELECT protease_id\, name FROM protease
        </proteaseIds>
        <geneIds>
            SELECT gene_id\, gene_accession FROM gene
        </geneIds>
        <proteinIds>
            SELECT protein_id\, protein_accession FROM protein
        </proteinIds>
        <peptideCountForProteaseCombination>
            SELECT count(pep.peptide_id)
            FROM peptide pep\,
            peptide2protease pep2prot\,
            protease prot
            WHERE pep.peptide_id=pep2prot.peptide_id
            AND pep2prot.protease_id=prot.protease_id
            AND prot.name IN (:proteaseCombination)
        </peptideCountForProteaseCombination>
        <signaturePeptideCountForProteaseCombination>
            SELECT count(peptide_degeneracy.peptide_id)
            FROM
            (SELECT pf.peptide_id\, count(distinct pf.sequence_id) as sequence_count
            FROM peptide_feature pf\, protease2peptide_feature pf2prot\, protease prot
            WHERE pf.peptide_feature_id=pf2prot.peptide_feature_id
            AND pf2prot.protease_id=prot.protease_id
            AND prot.name IN (:proteaseCombination)
            GROUP BY pf.peptide_id) peptide_degeneracy
            WHERE peptide_degeneracy.sequence_count = 1
            GROUP BY peptide_degeneracy.sequence_count
        </signaturePeptideCountForProteaseCombination>
        <peptideMassFrequency>
            SELECT mass\,
            COUNT(peptide_id) AS count
            FROM peptide_mass_temp
            GROUP BY (mass)
        </peptideMassFrequency>
        <signaturePeptideMassFrequency>
            SELECT mass\,
            COUNT(peptide_id) AS count
            FROM signature_peptide_mass_temp
            GROUP BY (mass)
        </signaturePeptideMassFrequency>


    </query>

</sigpep-query>